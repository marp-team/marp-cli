version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.5.0
  codecov: codecov/codecov@5.0.3

executors:
  node:
    parameters:
      browser:
        type: boolean
        default: false
      version:
        type: string
        default: '22.12.0' # Specify LTS major and minor for development
    docker:
      - image: cimg/node:<< parameters.version >><<# parameters.browser >>-browsers<</ parameters.browser >>
    working_directory: ~/marp-cli

commands:
  install:
    parameters:
      postinstall:
        type: steps
        default: []
    steps:
      - run:
          name: Set up LibreOffice
          command: |
            sudo apt-get update
            sudo apt-get install -y libreoffice-common libreoffice-java-common libreoffice-impress default-jre

      - restore_cache:
          keys:
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-{{ .Branch }}
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-

      - run: |
          npm ci
          npx patch-package

      - steps: << parameters.postinstall >>

      - save_cache:
          key: v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-{{ .Branch }}
          paths:
            - ~/.npm

  audit:
    steps:
      - checkout
      - install:
          postinstall:
            - run: npm -s run check:audit

  prepare:
    parameters:
      browser:
        type: boolean
        default: false
    steps:
      - run: node --version

      - checkout
      - install

      - when:
          condition: << parameters.browser >>
          steps:
            - browser-tools/install-chrome
            - browser-tools/install-firefox

  lint:
    steps:
      - run:
          name: Prettier formatting
          command: npm run check:format

      - run:
          name: TypeScript type checking
          command: npm run check:ts

      - run:
          name: ESLint
          command: npm run lint:js

      - run:
          name: stylelint
          command: npm run lint:css

  test:
    parameters:
      runInBand:
        type: boolean
        default: false
    steps:
      - run:
          name: Jest
          command: npm run test:coverage -- --ci --reporters=default --reporters=jest-junit <<#parameters.runInBand>>-i<</parameters.runInBand>><<^parameters.runInBand>>--maxWorkers=2<</parameters.runInBand>>
          environment:
            JEST_JUNIT_CLASSNAME: '{filepath}'
            JEST_JUNIT_OUTPUT_DIR: tmp/test-results
            MARP_TEST_CI: 1

      - codecov/upload:
          flags: linux

      - store_test_results:
          path: tmp/test-results

      - codecov/upload:
          flags: linux
          report_type: test_results
          dir: tmp/test-results

      - store_artifacts:
          path: ./coverage
          destination: coverage

  build:
    steps:
      - checkout
      - install

      - run: npm run build

      - persist_to_workspace:
          root: ~/marp-cli
          paths:
            - lib

jobs:
  audit:
    executor: node
    steps:
      - audit

  test-node18:
    executor:
      name: node
      browser: true
      version: '18.20'
    steps:
      - prepare:
          browser: true
      - lint
      - test:
          runInBand: true

  test-node20:
    executor:
      name: node
      browser: true
      version: '20.18'
    steps:
      - prepare:
          browser: true
      - lint
      - test:
          runInBand: true

  test-node22:
    executor:
      name: node
      browser: true
    steps:
      - prepare:
          browser: true
      - lint
      - test

workflows:
  test:
    jobs:
      - audit
      - test-node18:
          requires:
            - audit
      - test-node20:
          requires:
            - audit
      - test-node22:
          requires:
            - audit
