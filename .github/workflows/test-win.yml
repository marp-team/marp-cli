name: Test for Windows

on:
  - pull_request
  - push

jobs:
  validate:
    runs-on: ubuntu-latest
    if: "! ( contains(github.event.head_commit.message, '[ci skip]') || contains(github.event.head_commit.message, '[skip ci]') )"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  win-test:
    runs-on: windows-latest
    needs: validate

    strategy:
      fail-fast: false
      matrix:
        node-version:
          - '^8.16.0'
          - '^10.17.0'
          - '12.13.0'

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install yarn
        run: yarn policies set-version 1.19.1

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn_cache-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn_cache-${{ runner.os }}-${{ matrix.node-version }}-
            yarn_cache-${{ runner.os }}-

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node_modules-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node_modules-${{ runner.os }}-${{ matrix.node-version }}-
            node_modules-${{ runner.os }}-

      - name: Install dependencies with yarn
        run: yarn install

      - name: Jest
        run: yarn test:coverage --ci -i --reporters=default --reporters=jest-junit
        env:
          CI: true

      - uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: coverage

      - name: Codecov
        run: yarn codecov -F windows
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
